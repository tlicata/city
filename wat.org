Like SimCity, but for Lockport (or any town).

* What should it do?

- model traffic & roads & signals
- model neighborhoods & real-estate
- model police & crime
- model fire & emergency
- model schools
- model taxes & costs
- model local government & bonds
- be fun
- model up and coming events?
- model skatepark?

* But, how?

- Google maps? Generate own map (tiles)? Minecraft?
- User-edited, via pull requests.
- Cartoonish, SimCity-like interface? I can't art. Can Paul?
- Integrate with local government? Wards?
- Integrate with real-estate sites?
  + https://www.niagaracounty.com/realproperty/Resources/Real-Estate-Transactions
  + https://gis.ny.gov/gisdata/inventories/details.cfm?DSID=298
  + https://gis.ny.gov/gisdata/inventories/details.cfm?DSID=1158
- Read up on Strong Towns
  + https://www.strongtowns.org/journal/2020/8/10/i-did-the-math-on-my-towns-cul-de-sacs
- Start small, only part of city? Downtown? Build out.

* Implementation

- Simulations need distributed computing?
  + Or can all be done on client (browser?)
  + Just drawing on client will be expensive...
  + erlang backend + javascript frontend
  + clojure + cljs? (shared code)
  + write the whole thing in javascript
    + nodejs deployments

- Model vs View
- It's a map
- It's SimCity
- Needs timeline / scrubbing
- It's almost like the financial/charting projection work
- It relates to Kman's map coloring work
- Erlang, like distributed model trains
- Queryable
- Fast

** Why Erlang?
 I don't need real-time?

 "New hardware is increasing parallel, so new programming languages must support
 concurrency or they will die."

 Program multi-core. Multi-computer.
* OARSYSTEM data
** use mkgeo library
*** ./scrape-oars fetch
Traceback (most recent call last):
  File "./scrape-oars", line 7, in <module>
    import requests
ImportError: No module named requests
Need PIP
pip install requests?
*** OSError: [Errno 2] No such file or directory: 'data/cityoflockport/oars-2019'
mkdir -p data/cityoflockport/oars-2019
*** AttributeError: 'NoneType' object has no attribute 'findAll'
$ python bin/scrape-oars ls-streets
/home/tim/.local/lib/python2.7/site-packages/requests/__init__.py:83: RequestsDependencyWarning: Old version of cryptography ([1, 2, 3]) may cause slowdown.
  warnings.warn(warning, RequestsDependencyWarning)
2020-04-29 19:38:35 fetching url http://www.cityoflockport.oarsystem.com/assessment/main.asp?swis=140200;	2020-04-29 19:38:36 503
2020-04-29 19:38:36 parsing street list
Traceback (most recent call last):
  File "bin/scrape-oars", line 293, in <module>
    crawl(STREET_CRAWL, 1, offset)
  File "bin/scrape-oars", line 243, in crawl
    for i,street in enumerate(get_street_list()[offset::iterator]):
  File "bin/scrape-oars", line 235, in get_street_list
    for option in soup.find('select').findAll('option'):
AttributeError: 'NoneType' object has no attribute 'findAll'
** bail, and write it all in erlang
- didn't have a python env setup (pip, packages, filesystem/mkdir)
- you can call out to python from erlang, but, you need the dependencies?
- erlang wants to be a running, always on, system of processes and mkgeo is
  meant to be a script that's run then completes.
* Tech debt
** Supervisor for request throttling
In oars.erl, from_url wants to send a message to the one process handling http
requests to the oars system, so that we do not send hundreds of requests at
once. That one process is started in oars:run_services() and will be restarted
if it fails. However, I think this should be turned into a gen_supervisor &
worker configuration.
